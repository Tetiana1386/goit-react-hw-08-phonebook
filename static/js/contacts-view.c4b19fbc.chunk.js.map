{"version":3,"sources":["variables/motionVariable.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","views/ContactsView/ContactsView.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js"],"names":["variants","initial","scale","animate","exit","transition","ease","duration","module","exports","fetchContacts","dispatch","a","fetchContactsRequest","axios","get","data","fetchContactsSuccess","fetchContactsError","message","addContact","name","number","contact","addContactRequest","post","then","addContactSuccess","catch","error","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getLoading","isLoading","getError","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactList","useDispatch","visibleContacts","useSelector","contactsSelectors","length","motion","ul","className","styles","List","AnimatePresence","map","id","li","Item","Info","IconButton","color","type","onClick","contactsOperations","p","ContactForm","useState","setName","setNumber","handleChange","event","target","value","resetForm","Form","onSubmit","preventDefault","Label","Input","pattern","title","required","onChange","placeholder","format","mask","Button","variant","size","Filter","input","contactsActions","filterContact","ContactsView","useEffect","Wrapper"],"mappings":"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","file":"static/js/contacts-view.c4b19fbc.chunk.js","sourcesContent":["export const variants = {\n  initial: { scale: 0 },\n  animate: { scale: 1 },\n  exit: { scale: 0 },\n  transition: { ease: 'easeOut', duration: 0.3 },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__20gyh\",\"Item\":\"ContactList_Item__3bY-S\",\"Info\":\"ContactList_Info__157zz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__Vd_-O\",\"Label\":\"ContactForm_Label___hNWO\",\"Input\":\"ContactForm_Input__HKadG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__3FoRN\",\"Input\":\"Filter_Input__20k7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ContactsView_Wrapper__fIsgy\"};","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\n//axios.defaults.baseURL = 'http://localhost:3000';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../variables/motionVariable';\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <motion.ul className={styles.List}>\n          <AnimatePresence>\n            {visibleContacts.map(({ id, name, number }) => (\n              <motion.li\n                className={styles.Item}\n                key={id}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                transition=\"transition\"\n                variants={variants}\n              >\n                <p className={styles.Info}>\n                  <b>{name}</b>\n                  <em>{number}</em>\n                </p>\n                <IconButton\n                  aria-label=\"delete\"\n                  color=\"secondary\"\n                  type=\"button\"\n                  onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </motion.li>\n            ))}\n          </AnimatePresence>\n        </motion.ul>\n      )}\n\n      {!contacts.length && (\n        <AnimatePresence>\n          <motion.p\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            transition=\"transition\"\n            variants={variants}\n          >\n            Your phonebook is empty. Please add contact.\n          </motion.p>\n        </AnimatePresence>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\nimport NumberFormat from 'react-number-format';\nimport Button from '@material-ui/core/Button';\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(contactsOperations.addContact(name, number));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <label className={styles.Label}>\n        Name\n        <input\n          className={styles.Input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter name\"\n        />\n      </label>\n      <label className={styles.Label}>\n        Number\n        <NumberFormat\n          placeholder=\"Enter phone number\"\n          format=\"(###) ###-##-##\"\n          mask=\"_\"\n          pattern=\"^[0-9\\s\\(\\)\\-]{15}\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={styles.Input}\n        />\n      </label>\n\n      <Button variant=\"contained\" color=\"secondary\" size=\"large\" type=\"submit\">\n        Add contact\n      </Button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../variables/motionVariable';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <AnimatePresence>\n          <label className={styles.Label}>\n            <motion.input\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              transition=\"transition\"\n              variants={variants}\n              className={styles.Input}\n              type=\"text\"\n              value={filter}\n              onChange={event =>\n                dispatch(contactsActions.filterContact(event.target.value))\n              }\n            />\n          </label>\n        </AnimatePresence>\n      )}\n    </>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ContactList from '../../components/ContactList';\nimport ContactForm from '../../components/ContactForm';\nimport Filter from '../../components/Filter';\nimport { contactsOperations } from '../../redux/contacts';\nimport styles from './ContactsView.module.css';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <div className={styles.Wrapper}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"sourceRoot":""}